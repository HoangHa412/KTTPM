const getBookApi = "http://127.0.0.1:5000/book-management/books";
const addBookApi = "http://127.0.0.1:5000/book-management/book";

// H√†m kh·ªüi t·∫°o
function start() {
    handleCreateForm(); // ƒêƒÉng k√Ω h√†m x·ª≠ l√Ω form
}

// H√†m validation chi ti·∫øt
function validateBookForm(name, pageCount, authorId, categoryId) {
    // Ki·ªÉm tra t√™n s√°ch
    if (!name || name.trim() === '') {
        alert("‚ùå L·ªói: T√™n s√°ch kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");
        return false;
    }
    
    if (name.length > 100) {
        alert("‚ùå L·ªói: T√™n s√°ch kh√¥ng ƒë∆∞·ª£c qu√° 100 k√Ω t·ª±!");
        return false;
    }

    // Ki·ªÉm tra s·ªë trang
    if (!pageCount || pageCount === '') {
        alert("‚ùå L·ªói: S·ªë trang kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");
        return false;
    }
    
    if (isNaN(pageCount)) {
        alert("‚ùå L·ªói: S·ªë trang ph·∫£i l√† s·ªë nguy√™n!");
        return false;
    }
    
    const pageNum = parseInt(pageCount);
    if (pageNum <= 0) {
        alert("‚ùå L·ªói: S·ªë trang ph·∫£i l·ªõn h∆°n 0!");
        return false;
    }
    
    if (pageNum > 10000) {
        alert("‚ùå L·ªói: S·ªë trang kh√¥ng th·ªÉ qu√° 10,000 trang!");
        return false;
    }

    // Ki·ªÉm tra ID t√°c gi·∫£
    if (!authorId || authorId.trim() === '') {
        alert("‚ùå L·ªói: ID t√°c gi·∫£ kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");
        return false;
    }
    
    // Ki·ªÉm tra k√Ω t·ª± ƒë·∫∑c bi·ªát trong ID t√°c gi·∫£ (ch·ªâ cho ph√©p ch·ªØ, s·ªë, _, -)
    const authorIdRegex = /^[a-zA-Z0-9_-]+$/;
    if (!authorIdRegex.test(authorId.trim())) {
        alert("‚ùå L·ªói: ID t√°c gi·∫£ ch·ªâ ƒë∆∞·ª£c ch·ª©a ch·ªØ c√°i, s·ªë, d·∫•u g·∫°ch d∆∞·ªõi (_) v√† g·∫°ch ngang (-)!");
        return false;
    }

    // Ki·ªÉm tra th·ªÉ lo·∫°i
    if (!categoryId || categoryId === '') {
        alert("‚ùå L·ªói: Th·ªÉ lo·∫°i kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");
        return false;
    }
    
    if (isNaN(categoryId)) {
        alert("‚ùå L·ªói: Th·ªÉ lo·∫°i ph·∫£i l√† s·ªë nguy√™n!");
        return false;
    }
    
    const catNum = parseInt(categoryId);
    if (catNum <= 0) {
        alert("‚ùå L·ªói: Th·ªÉ lo·∫°i ph·∫£i l·ªõn h∆°n 0!");
        return false;
    }
    
    if (catNum > 1000) {
        alert("‚ùå L·ªói: Th·ªÉ lo·∫°i v∆∞·ª£t qu√° gi·ªõi h·∫°n cho ph√©p (t·ªëi ƒëa 1000)!");
        return false;
    }

    return true;
}

// H√†m x·ª≠ l√Ω khi g·ª≠i form
function handleCreateForm() {
    var form = document.getElementById('book-form');

    form.onsubmit = function(e) {
        e.preventDefault(); // NgƒÉn ch·∫∑n h√†nh ƒë·ªông g·ª≠i form m·∫∑c ƒë·ªãnh

        // L·∫•y d·ªØ li·ªáu t·ª´ c√°c tr∆∞·ªùng trong form
        var name = document.getElementById('bookName').value;
        var pageCount = document.getElementById('pageCount').value;
        var author_name = document.getElementById('authorId').value;
        var categoryId = document.getElementById('categoryId').value;

        // Validation chi ti·∫øt
        if (!validateBookForm(name, pageCount, author_name, categoryId)) {
            return; // D·ª´ng l·∫°i n·∫øu validation th·∫•t b·∫°i
        }

        // N·∫øu validation th√†nh c√¥ng, t·∫°o data object
        const data = {
            name: name.trim(),
            page_count: parseInt(pageCount),
            author_name: author_name.trim(),
            category_id: parseInt(categoryId)
        };
        
        // Hi·ªÉn th·ªã th√¥ng b√°o ƒëang x·ª≠ l√Ω
        alert("‚è≥ ƒêang x·ª≠ l√Ω th√™m s√°ch...");
        
        createBook(data); // G·ª≠i d·ªØ li·ªáu t·ªõi API ƒë·ªÉ th√™m s√°ch
    }
}

// H√†m g·ª≠i y√™u c·∫ßu th√™m s√°ch ƒë·∫øn API
function createBook(data) {
    const options = {
        method: 'POST',
        body: JSON.stringify(data),
        headers: {
            'Content-Type': 'application/json'
        }
    };
    
    fetch(addBookApi, options)
        .then(response => {
            if (!response.ok) {
                // X·ª≠ l√Ω c√°c m√£ l·ªói HTTP kh√°c nhau
                if (response.status === 400) {
                    throw new Error('‚ùå D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá. Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin!');
                } else if (response.status === 409) {
                    throw new Error('‚ùå S√°ch ƒë√£ t·ªìn t·∫°i trong h·ªá th·ªëng!');
                } else if (response.status === 500) {
                    throw new Error('‚ùå L·ªói server. Vui l√≤ng th·ª≠ l·∫°i sau!');
                } else {
                    throw new Error(`‚ùå L·ªói HTTP ${response.status}: ${response.statusText}`);
                }
            }
            return response.json();
        })
        .then(data => {
            console.log("S√°ch ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng:", data);
            alert("‚úÖ Th√™m s√°ch m·ªõi th√†nh c√¥ng!\n\nüìö T√™n s√°ch: " + data.name + "\nüìÑ S·ªë trang: " + data.page_count + "\n‚úçÔ∏è T√°c gi·∫£: " + data.author_name + "\nüìÇ Th·ªÉ lo·∫°i ID: " + data.category_id);
            
            // Reset form sau khi th√†nh c√¥ng
            document.getElementById('book-form').reset();
        })
        .catch(error => {
            console.error('L·ªói khi th√™m s√°ch:', error);
            alert(error.message || "‚ùå Kh√¥ng th·ªÉ th√™m s√°ch. Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin v√† th·ª≠ l·∫°i!");
        });
}

// Th√™m validation real-time cho c√°c tr∆∞·ªùng
function addRealTimeValidation() {
    // Validation t√™n s√°ch
    const bookNameField = document.getElementById('bookName');
    bookNameField.addEventListener('blur', function() {
        const value = this.value.trim();
        if (value && value.length > 100) {
            alert("‚ö†Ô∏è C·∫£nh b√°o: T√™n s√°ch qu√° d√†i (t·ªëi ƒëa 100 k√Ω t·ª±)!");
        }
    });

    // Validation s·ªë trang
    const pageCountField = document.getElementById('pageCount');
    pageCountField.addEventListener('blur', function() {
        const value = parseInt(this.value);
        if (this.value && (isNaN(value) || value <= 0)) {
            alert("‚ö†Ô∏è C·∫£nh b√°o: S·ªë trang ph·∫£i l√† s·ªë nguy√™n d∆∞∆°ng!");
        } else if (value > 10000) {
            alert("‚ö†Ô∏è C·∫£nh b√°o: S·ªë trang kh√¥ng th·ªÉ qu√° 10,000!");
        }
    });

    // Validation ID t√°c gi·∫£
    const authorIdField = document.getElementById('authorId');
    authorIdField.addEventListener('blur', function() {
        const value = this.value.trim();
        const regex = /^[a-zA-Z0-9_-]+$/;
        if (value && !regex.test(value)) {
            alert("‚ö†Ô∏è C·∫£nh b√°o: ID t√°c gi·∫£ ch·ªâ ƒë∆∞·ª£c ch·ª©a ch·ªØ c√°i, s·ªë, d·∫•u g·∫°ch d∆∞·ªõi (_) v√† g·∫°ch ngang (-)!");
        }
    });

    // Validation th·ªÉ lo·∫°i
    const categoryIdField = document.getElementById('categoryId');
    categoryIdField.addEventListener('blur', function() {
        const value = parseInt(this.value);
        if (this.value && (isNaN(value) || value <= 0)) {
            alert("‚ö†Ô∏è C·∫£nh b√°o: Th·ªÉ lo·∫°i ph·∫£i l√† s·ªë nguy√™n d∆∞∆°ng!");
        } else if (value > 1000) {
            alert("‚ö†Ô∏è C·∫£nh b√°o: Th·ªÉ lo·∫°i v∆∞·ª£t qu√° gi·ªõi h·∫°n (t·ªëi ƒëa 1000)!");
        }
    });
}

// G·ªçi h√†m kh·ªüi t·∫°o
start();
// Th√™m validation real-time sau khi DOM load
document.addEventListener('DOMContentLoaded', addRealTimeValidation);
